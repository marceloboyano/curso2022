// <auto-generated />
using System;
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(DisneyContext))]
    [Migration("20220928010414_initpepe")]
    partial class initpepe
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataBase.Genero", b =>
                {
                    b.Property<int>("GeneroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneroID"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("GeneroID");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("DataBase.Pelicula", b =>
                {
                    b.Property<int>("PeliculaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeliculaID"), 1L, 1);

                    b.Property<int>("Calificacion")
                        .HasMaxLength(5)
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PeliculaID");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("DataBase.Personaje", b =>
                {
                    b.Property<int>("PersonajeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonajeID"), 1L, 1);

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Historia")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PersonajeID");

                    b.ToTable("Personajes");
                });

            modelBuilder.Entity("GeneroPelicula", b =>
                {
                    b.Property<int>("GenerosGeneroID")
                        .HasColumnType("int");

                    b.Property<int>("PeliculasPeliculaID")
                        .HasColumnType("int");

                    b.HasKey("GenerosGeneroID", "PeliculasPeliculaID");

                    b.HasIndex("PeliculasPeliculaID");

                    b.ToTable("GeneroPelicula");
                });

            modelBuilder.Entity("PeliculaPersonaje", b =>
                {
                    b.Property<int>("PeliculasPeliculaID")
                        .HasColumnType("int");

                    b.Property<int>("PersonajesPersonajeID")
                        .HasColumnType("int");

                    b.HasKey("PeliculasPeliculaID", "PersonajesPersonajeID");

                    b.HasIndex("PersonajesPersonajeID");

                    b.ToTable("PeliculaPersonaje");
                });

            modelBuilder.Entity("GeneroPelicula", b =>
                {
                    b.HasOne("DataBase.Genero", null)
                        .WithMany()
                        .HasForeignKey("GenerosGeneroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("PeliculasPeliculaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PeliculaPersonaje", b =>
                {
                    b.HasOne("DataBase.Pelicula", null)
                        .WithMany()
                        .HasForeignKey("PeliculasPeliculaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Personaje", null)
                        .WithMany()
                        .HasForeignKey("PersonajesPersonajeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
