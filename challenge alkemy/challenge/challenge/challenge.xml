<?xml version="1.0"?>
<doc>
    <assembly>
        <name>challenge</name>
    </assembly>
    <members>
        <member name="M:challenge.Controllers.AuthController.Register(System.String,System.String,System.String)">
            <summary>
            Crear cuenta Nueva
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.AuthController.Login(System.String,System.String)">
            <summary>
            Entrar
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.CharacterController.GetCharacter(challenge.QueryFilters.CharacterQueryFilter)">
            <summary>
            Busca Personajes aplicando distintos filtros. Se puede Elegir con Detalle o sin el.
            </summary>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.CharacterController.GetCharacterById(System.Int32)">
            <summary>
            Busca Personajes por Id con el Detalle completo.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.CharacterController.PostPersonaje(challenge.DTOs.Personajes.CharacterDto.CharacterForCreationDTO)">
            <summary>
            Agregar Personajes.Debe estar previamente registrado, logeado y autorizado con el token. 
            </summary>
            <param name="characterDTO"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.CharacterController.PutPersonaje(System.Int32,challenge.DTOs.Personajes.CharacterDto.CharacterForUpdateDTO)">
            <summary>
            Modificar Personajes, se pueden modificar algunos campos o todos.Debe estar previamente registrado, logeado y autorizado con el token. 
            </summary>
            <param name="id"></param>
            <param name="characterDTO"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.CharacterController.DeleteCharacter(System.Int32)">
            <summary>
            Eliminar Personajes.Debe estar previamente registrado, logeado y autorizado con el token.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.MovieController.GetMovieById(System.Int32)">
            <summary>
            Busca peliculas por Id con el Detalle completo
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.MovieController.GetMovie(challenge.QueryFilters.MovieQueryFilters)">
            <summary>
            Busca Peliculas aplicando distintos filtros. Se puede Elegir con Detalle o sin el.
            </summary>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.MovieController.PostMovie(challenge.DTOs.Peliculas.MoviesDto.MoviesForCreationDTO)">
            <summary>
            Agregar Peliculas.Debe estar previamente registrado, logeado y autorizado con el token. 
            </summary>
            <param name="movieDTO"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.MovieController.PutMovie(System.Int32,challenge.DTOs.Peliculas.MoviesDto.MoviesForUpdateDTO)">
            <summary>
            Modificar Peliculas, se pueden modificar algunos campos o todos.Debe estar previamente registrado, logeado y autorizado con el token. 
            </summary>
            <param name="id"></param>
            <param name="movieDTO"></param>
            <returns></returns>
        </member>
        <member name="M:challenge.Controllers.MovieController.DeleteMovie(System.Int32)">
            <summary>
            Eliminar Peliculas.Debe estar previamente registrado, logeado y autorizado con el token. 
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:challenge.QueryFilters.CharacterQueryFilter.Name">
            <summary>
            Buscar por por Nombre 
            </summary>        
        </member>
        <member name="P:challenge.QueryFilters.CharacterQueryFilter.Age">
            <summary>
            Buscar por por Edad 
            </summary>
        </member>
        <member name="P:challenge.QueryFilters.CharacterQueryFilter.MovieID">
            <summary>
            Buscar por por Pelicula 
            </summary>
        </member>
        <member name="P:challenge.QueryFilters.CharacterQueryFilter.Details">
            <summary>
            Indicar true para traer todos los campos
            </summary>
        </member>
        <member name="P:challenge.QueryFilters.MovieQueryFilters.Title">
            <summary>
            Buscar por por Titulo 
            </summary>
        </member>
        <member name="P:challenge.QueryFilters.MovieQueryFilters.GenderID">
            <summary>
            Buscar por Genero
            </summary>
        </member>
        <member name="P:challenge.QueryFilters.MovieQueryFilters.Order">
            <summary>
            Deber√° indicar ASC o DESC para buscar en orden ascendente o descendente
            </summary>
        </member>
        <member name="P:challenge.QueryFilters.MovieQueryFilters.Details">
            <summary>
            Indicar true para traer todos los campos
            </summary>
        </member>
    </members>
</doc>
